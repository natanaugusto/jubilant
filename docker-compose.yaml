services:
  web:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
      args:
        API_PORT: ${API_PORT:-3000}
    tty: true
    init: true
    environment:
      WEB_HOST: ${WEB_HOST:-0.0.0.0}
      API_PORT: ${API_PORT:-3000}
      API_HOST: ${API_HOST:-http://localhost:${API_PORT:-3000}}
      APP_PORT: ${APP_PORT:-4000}
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      DB_DATABASE: ${DB_DATABASE:-database}
      DB_USER: ${DB_USER:-user}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
    ports:
      - "${API_PORT:-3000}:${API_PORT:-3000}"
      - "${APP_PORT:-4000}:${APP_PORT:-4000}"
    volumes:
      - .:/web
    depends_on:
      - db
    networks:
      - candy

  db:
    build:
      context: .
      dockerfile: docker/db/Dockerfile
      args:
        DB_DATABASE: ${DB_DATABASE:-database}
        DB_USER: ${DB_USER:-user}
        DB_PORT: ${DB_PORT:-3306}
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-database}
      MYSQL_USER: ${DB_USER:-user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
      MYSQL_TCP_PORT: ${DB_PORT:-3306}
    ports:
      - "${DB_PORT:-3306}:${DB_PORT:-3306}"
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - candy

volumes:
  db_data:
    driver: local

networks:
  candy:
    driver: bridge